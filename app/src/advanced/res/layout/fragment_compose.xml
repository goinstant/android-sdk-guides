<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:app="http://schemas.android.com/apk/res-auto"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="vertical"
              android:paddingBottom="@dimen/activity_vertical_margin"
              android:paddingLeft="@dimen/activity_horizontal_margin"
              android:paddingRight="@dimen/activity_horizontal_margin"
              android:paddingTop="@dimen/activity_vertical_margin">

    <EditText
        android:id="@+id/compose_email"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_marginBottom="5dp"
        android:layout_marginTop="5dp"
        android:layout_weight="1"
        android:background="#00ffffff"
        android:hint="@string/hint_email"
        android:inputType="textEmailAddress"
        android:textSize="14sp"/>

    <View
        android:layout_width="fill_parent"
        android:layout_height="1dp"
        android:background="#aa808080"/>

    <EditText
        android:id="@+id/compose_subject"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_marginBottom="15dp"
        android:layout_marginTop="10dp"
        android:layout_weight="1"
        android:background="#00ffffff"
        android:hint="@string/hint_subject"
        android:inputType="text"
        android:textSize="22sp"/>

    <!--
    The most direct way to make a masked field is to use the SOS masked equivalent of an
    existing Android field. Currently, the following maskable fields are available:
        com.salesforce.android.sos.maskview.EditText,
        com.salesforce.android.sos.maskview.AutoCompleteTextView,
        com.salesforce.android.sos.maskview.MultiAutoCompleteTextView,
        com.salesforce.android.sos.maskview.TextView,
        com.salesforce.android.sos.maskview.View

    The first three of these masked-field types are editable and exposing and hiding of those
    fields is handled automatically whenever the field has focus. It is possible to expose or
    hide any of the masked fields programmatically.

    Additionally, the actual drawable that acts as the mask can be customized with an
    application-defined drawable asset (app:mask_drawable). The mask defaults to a gray rounded
    rectangle if no drawable is specified.

    You are also able to additionally customize any of the available masked fields by extending
    them in your code. See the CustomMaskedEditText class for additional drawing customization.
    -->
    <com.salesforce.androidsosguides.sos.CustomMaskedEditText
        android:id="@+id/compose_message"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="10"
        android:background="#00ffffff"
        android:gravity="top"
        android:hint="@string/hint_message"
        android:inputType="textMultiLine"
        android:minLines="15"
        android:textSize="14sp"
        app:sos_mask_drawable="@drawable/custom_field_mask"/>


    <Button
        android:id="@+id/button_send"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="@string/send"/>
</LinearLayout>